# This file contains pin mappings for the SUNLU S8 v1.01 (circa 2020), which
# is a modified RAMPS v1.3 board. To use this config, the firmware should be
# compiled for the AVR atmega2560. The following pins are available for
# expansion (e.g. ABL): ^PD2 (Z+ endstop), PG5, PE3, PH3, PB5

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PF0
dir_pin: !PF1
enable_pin: !PD7
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PE5
position_endstop: 0
position_max: 310
homing_speed: 50

[stepper_y]
step_pin: PF6
dir_pin: !PF7
enable_pin: !PF2
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PJ1
position_endstop: 0
position_max: 310
homing_speed: 50

[stepper_z]
step_pin: PL3
dir_pin: PL1
enable_pin: !PK0
microsteps: 16
rotation_distance: 8
endstop_pin: ^!PD3
position_endstop: 0.5
position_max: 400

[extruder]
step_pin: PA4
dir_pin: !PA6
enable_pin: !PA2
microsteps: 16
rotation_distance: 33.280
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB4
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK5
control: pid
pid_kp: 25.588
pid_ki: 1.496
pid_kd: 109.388
min_temp: 0
max_temp: 250

[filament_switch_sensor runout]
pause_on_runout: True
switch_pin: ^PE4

[heater_bed]
heater_pin: PH5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK6
control: pid
pid_kp: 74.786
pid_ki: 0.766
pid_kd: 1825.718
min_temp: 0
max_temp: 110

[verify_heater heater_bed]
# The stock printer heats slowly due to a large bed and no external MOSFET.
# This should be reduced if an external MOSFET is added to increase max_temp
# and heating rate.
check_gain_time: 240

[fan]
pin: PH6

[heater_fan fan1]
pin: PH4

[mcu]
# serial: /dev/ttyUSB0
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 10
max_z_accel: 100

[display]
lcd_type: st7920
cs_pin: PH1
sclk_pin: PA1
sid_pin: PH0
encoder_pins: ^PC4, ^PC6
click_pin: ^!PC2

[output_pin beeper]
pin: PC0

#####################################################################
#   Mainsail Config
#####################################################################

[virtual_sdcard]
path: /var/lib/moonraker/gcodes

[display_status]

[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
##### set park positon for x and y #####
# default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
    {% set z_safe = 2.0 %}
    {% else %}
    {% set z_safe = max_z - act_z %}
    {% endif %}
##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
    {% else %}
    {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% else %}
    {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
#### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
    {% set get_params = "" %}
    {% endif %}
##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
    {% else %}
    {action_respond_info("Extruder not hot enough")}
    {% endif %}
    RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE

# https://ellis3dp.com/Print-Tuning-Guide/articles/useful_macros/replace_m109_m190_with_temp_wait.html
# Replace M109 (wait for hotend temperature) and M190 (wait for bed temperature) with TEMPERATURE_WAIT.
# This just makes Klipper resume immediately after reaching temp. Otherwise it waits for the temperature to stabilize.
[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}

    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}

